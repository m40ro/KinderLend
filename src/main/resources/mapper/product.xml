<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--반드시 세미콜론 생략 -->
<mapper
	namespace="com.tenco.toyproject.repository.interfaces.ProductRepository">

	<select id="findById"
		resultType="com.tenco.toyproject.repository.entity.Product">
		select * from product where id = #{id}
	</select>


	<select id="showCartById"
		resultType="com.tenco.toyproject.repository.entity.Product">
		SELECT p.*
		FROM product p
		JOIN cart c ON p.id = c.product_id
		WHERE c.user_id = #{userId}
	</select>

	<insert id="addToCartById" parameterType="int">
		INSERT INTO cart (user_id, product_id) 
		VALUES (#{userId}, #{productId})		
	</insert>
	
	<select id="countProductCustomer" resultType="int">
        select count(*) from board where product_id = #{productId}
    </select>
    
    <delete id="deleteCartItem">
		delete from 
		cart where user_id = #{userId} and  product_id = #{productId}
	</delete>
	
	<select id="isItemInCart" resultType="int">
		select count(*)
		from cart
		where user_id = #{userId} 
		and product_id = #{productId}
	</select>
	
	<select id="countItemInCart" resultType="int">
		select count(*)
		from cart
		where user_id = #{userId}
	</select>
	
	<insert id="payForCart" parameterType="int">
		insert into order(user_id, product_id)
		select user_id, product_id
		from cart
		where user_id = #{userId}
	</insert>
	
	<insert id="payForProduct" parameterType="com.tenco.toyproject.dto.PayForProductDTO">
		insert into orderlist(user_id, product_id, tid)
		values(#{userId}, #{productId}, #{tid})
	</insert>
	
	<!-- 주문 완료 목록 보기 -->
	<select id="showCustomerOrderList" resultType="map">
		select * from orderlist as o
			join product as p
			on o.product_id = p.id
			where user_id = #{userId};
	</select>
	
	<!-- 환불 신청 테스트 -->
	<delete id="applyForRefund">
		delete from orderlist
			where user_id = #{userId}
			and product_id = #{productId};
	</delete>
	
	<select id="findTid" resultType="com.tenco.toyproject.repository.entity.Order">
		select * from orderlist 
			where user_id = #{userId}
			and product_id = #{productId};
	</select>
	
	
	
<!-- 	검색기능 관련 -->
<!-- 	검색한 상품 목록 -->
	<select id="searchProduct" resultType="Map">
		select * from product
		where name Like CONCAT('%', #{keyword}, '%') 
		limit 0, 5;
	</select>
	<select id="searchProductInfinite" resultType="Map">
		select * from product
		where name Like CONCAT('%', #{keyword}, '%') 
		limit #{offset}, #{limit}
	</select>
<!-- 	검색한 상품 갯수 가져오기 -->
	<select id="searchProductCount" resultType="int">
		select count(*) from product
		where name Like CONCAT('%', #{keyword}, '%')
	</select>
	<select id="searchMaxPrice" resultType="int">
		select max(price) as MAX from product
	</select>
<!-- 	검색기능 관련 끝 -->
</mapper>