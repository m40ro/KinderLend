<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--반드시 세미콜론 생략 -->
<mapper
        namespace="com.tenco.toyproject.repository.interfaces.mng.MngRentRepository">

    <select id="findByRentId">
        SELECT r.id ,u.user_name,u.email,u.phone_number as phoneNumber,p.id AS productId, p.name AS productName , p.pic_url AS productPicUrl, r.start_day, r.end_day,r.post_number, r.address, r.address_detail,r.`STATUS` FROM rent r INNER JOIN user u ON r.user_id = u.id INNER JOIN product p ON r.product_id = p.id WHERE r.id = #{id}
    </select>
    <select id="findRentAllCount">
        select count(*) from rent where status != 1
    </select>
    <select id="findRentWithUserAll">
        select r.id, u.user_name, p.id as productId,p.name as productName, r.status, r.start_day, r.end_day,r.created_at from rent r left outer join user u on r.user_id = u.id left outer join product p on r.product_id = p.id where r.status != 1 LIMIT #{start}, 5
    </select>

    <update id="updateByRentStatus">
        update rent set status = 3 where id = #{id}
    </update>
    <delete id="deleteByRentStatus">
        delete from rent where id =${id}
    </delete>
    <update id="updateById">
        update rent set post_number = ${postNumber}, address = #{address}, address_detail = #{addressDetail}, status = #{status} , start_day = #{startDay} , end_day = #{endDay} where id = #{id}
    </update>
    <select id="findByRent" resultType="com.tenco.toyproject.repository.entity.Rent">
        select * from rent where id = #{id}
    </select>

</mapper>